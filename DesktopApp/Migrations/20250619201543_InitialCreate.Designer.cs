// <auto-generated />
using System;
using DesktopApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesktopApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619201543_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("DesktopApp.Model.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Discount")
                        .HasColumnType("REAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GSTIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PAN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompanyInfos");
                });

            modelBuilder.Entity("DesktopApp.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceId");

                    b.HasIndex("PartyId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceId = 1,
                            InvoiceDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            InvoiceNo = "INV001",
                            PartyId = 1
                        },
                        new
                        {
                            InvoiceId = 2,
                            InvoiceDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            InvoiceNo = "INV002",
                            PartyId = 2
                        });
                });

            modelBuilder.Entity("DesktopApp.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Trichy",
                            Name = "Suresh Pharma",
                            Phone = "9876543210"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Chennai",
                            Name = "HealthCare Plus",
                            Phone = "1234567890"
                        });
                });

            modelBuilder.Entity("DesktopApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            InvoiceId = 1,
                            Price = 50m,
                            ProductName = "Paracetamol",
                            Quantity = 10,
                            Unit = "Strips"
                        },
                        new
                        {
                            ProductId = 2,
                            InvoiceId = 1,
                            Price = 100m,
                            ProductName = "Amoxicillin",
                            Quantity = 5,
                            Unit = "Capsules"
                        },
                        new
                        {
                            ProductId = 3,
                            InvoiceId = 2,
                            Price = 25m,
                            ProductName = "Cetrizine",
                            Quantity = 20,
                            Unit = "Tablet"
                        });
                });

            modelBuilder.Entity("DesktopApp.Models.Invoice", b =>
                {
                    b.HasOne("DesktopApp.Models.Party", "Party")
                        .WithMany("Invoices")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("DesktopApp.Models.Product", b =>
                {
                    b.HasOne("DesktopApp.Models.Invoice", "Invoice")
                        .WithMany("Products")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("DesktopApp.Models.Invoice", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DesktopApp.Models.Party", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
